<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dao.ShopNoticMapper" >
  <resultMap id="BaseResultMap" type="com.model.ShopNotic" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="notic_title" property="noticTitle" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_user" property="createUser" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.model.ShopNotic" extends="BaseResultMap" >
    <result column="notic_content" property="noticContent" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, notic_title, create_time, create_user, update_time
  </sql>
  <sql id="Blob_Column_List" >
    notic_content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from shop_notic
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from shop_notic
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.model.ShopNotic" >
    insert into shop_notic (id, notic_title, create_time, 
      create_user, update_time, notic_content
      )
    values (#{id,jdbcType=INTEGER}, #{noticTitle,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createUser,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, #{noticContent,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.model.ShopNotic" >
    insert into shop_notic
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="noticTitle != null" >
        notic_title,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="noticContent != null" >
        notic_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="noticTitle != null" >
        #{noticTitle,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="noticContent != null" >
        #{noticContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.model.ShopNotic" >
    update shop_notic
    <set >
      <if test="noticTitle != null" >
        notic_title = #{noticTitle,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="noticContent != null" >
        notic_content = #{noticContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.model.ShopNotic" >
    update shop_notic
    set notic_title = #{noticTitle,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      notic_content = #{noticContent,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.model.ShopNotic" >
    update shop_notic
    set notic_title = #{noticTitle,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectAll" resultType="ShopNotic">
    select 
     id, notic_content, notic_title, create_time, create_user, update_time from shop_notic
  
  </select>
  
  
  
  <!-- wub -->
<resultMap type="com.model.ShopNotic" id="ShopNoticMapper">  
                <id column="id" property="id"/>  
                <result column="notic_content" property="noticContent"/>  
                <result column="notic_title" property="noticTitle"/>  
                <result column="create_time" property="createTime"/>  
                <result column="update_time" property="updateTime"/>  
                  
                <association property="adminUser" javaType="com.model.AdminUser">  
                        <id column="admin_user.id" property="id"/>  
                        <result column="username" property="username"/>  
                          
                </association>  
            </resultMap>  
   
          <select id="selAllShopNotic" resultMap="ShopNoticMapper" parameterType="com.model.ShopNotic">  
                SELECT   
                  shop_notic.*,  
                  admin_user.username
                FROM  
                  shop_notic,  
                  admin_user   
                WHERE shop_notic.create_user = admin_user.id  and 
               (create_time between #{createTime,jdbcType=DATE} and #{updateTime,jdbcType=DATE})
                <trim prefix="and">
                <if test="noticTitle != null">
                notic_title like CONCAT('%',#{noticTitle},'%' )
                </if>
                </trim>
    </select>      
  
</mapper>